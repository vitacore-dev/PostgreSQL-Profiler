#!/bin/bash

# PostgreSQL Profiler - –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Å–±–æ—Ä–∫–µ
# –ê–≤—Ç–æ—Ä: Manus AI
# –í–µ—Ä—Å–∏—è: 1.0

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL Profiler –∫ —Å–±–æ—Ä–∫–µ..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
ERRORS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
error() {
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: $1${NC}"
    ((ERRORS++))
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $1${NC}"
    ((WARNINGS++))
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—Ö–∞
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

echo "==========================================="
echo "üîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ü–†–û–ï–ö–¢–ê"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
if [ -d "postgresql_profiler" ]; then
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–∞–π–¥–µ–Ω–∞"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è postgresql_profiler –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

if [ -d "postgresql_profiler_frontend" ]; then
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–∞–π–¥–µ–Ω–∞"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è postgresql_profiler_frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ -f "docker-compose.yml" ]; then
    success "docker-compose.yml –Ω–∞–π–¥–µ–Ω"
else
    error "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ -f ".env.example" ]; then
    success ".env.example –Ω–∞–π–¥–µ–Ω"
else
    error ".env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "==========================================="
echo "üîç –ü–†–û–í–ï–†–ö–ê BACKEND –ö–û–ú–ü–û–ù–ï–ù–¢–û–í"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile backend
if [ -f "postgresql_profiler/Dockerfile" ]; then
    success "Backend Dockerfile –Ω–∞–π–¥–µ–Ω"
else
    error "Backend Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt
if [ -f "postgresql_profiler/requirements.txt" ]; then
    success "requirements.txt –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if grep -q "Flask" postgresql_profiler/requirements.txt; then
        success "Flask –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "Flask –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ requirements.txt"
    fi
    
    if grep -q "celery" postgresql_profiler/requirements.txt; then
        success "Celery –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "Celery –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ requirements.txt"
    fi
    
    if grep -q "redis" postgresql_profiler/requirements.txt; then
        success "Redis –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "Redis –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ requirements.txt"
    fi
else
    error "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
if [ -f "postgresql_profiler/start.sh" ]; then
    success "Backend start.sh –Ω–∞–π–¥–µ–Ω"
    if [ -x "postgresql_profiler/start.sh" ]; then
        success "start.sh –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        warning "start.sh –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    fi
else
    error "Backend start.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ -f "postgresql_profiler/src/main.py" ]; then
    success "main.py –Ω–∞–π–¥–µ–Ω"
else
    error "main.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "==========================================="
echo "üîç –ü–†–û–í–ï–†–ö–ê FRONTEND –ö–û–ú–ü–û–ù–ï–ù–¢–û–í"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile frontend
if [ -f "postgresql_profiler_frontend/Dockerfile" ]; then
    success "Frontend Dockerfile –Ω–∞–π–¥–µ–Ω"
else
    error "Frontend Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
if [ -f "postgresql_profiler_frontend/package.json" ]; then
    success "package.json –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if grep -q "react" postgresql_profiler_frontend/package.json; then
        success "React –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "React –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ package.json"
    fi
    
    if grep -q "vite" postgresql_profiler_frontend/package.json; then
        success "Vite –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "Vite –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ package.json"
    fi
else
    error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -f "postgresql_profiler_frontend/nginx.conf" ]; then
    success "nginx.conf –Ω–∞–π–¥–µ–Ω"
else
    error "nginx.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞ frontend
if [ -f "postgresql_profiler_frontend/start.sh" ]; then
    success "Frontend start.sh –Ω–∞–π–¥–µ–Ω"
    if [ -x "postgresql_profiler_frontend/start.sh" ]; then
        success "Frontend start.sh –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        warning "Frontend start.sh –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    fi
else
    error "Frontend start.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "==========================================="
echo "üîç –ü–†–û–í–ï–†–ö–ê PYTHON –ö–û–î–ê"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤..."
PYTHON_ERRORS=0

if command -v python3 &> /dev/null; then
    while IFS= read -r -d '' file; do
        if ! python3 -m py_compile "$file" 2>/dev/null; then
            error "–°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ: $file"
            ((PYTHON_ERRORS++))
        fi
    done < <(find postgresql_profiler -name "*.py" -print0 2>/dev/null)
    
    if [ $PYTHON_ERRORS -eq 0 ]; then
        success "–í—Å–µ Python —Ñ–∞–π–ª—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    else
        error "–ù–∞–π–¥–µ–Ω–æ $PYTHON_ERRORS —Ñ–∞–π–ª–æ–≤ —Å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–º–∏ –æ—à–∏–±–∫–∞–º–∏"
    fi
else
    warning "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
fi

echo ""
echo "==========================================="
echo "üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–û–ù–ù–´–• –§–ê–ô–õ–û–í"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml
if command -v docker-compose &> /dev/null; then
    if docker-compose config &>/dev/null; then
        success "docker-compose.yml —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        error "–û—à–∏–±–∫–∞ –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ docker-compose.yml"
    fi
else
    warning "docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if command -v nginx &> /dev/null; then
    if nginx -t -c "$(pwd)/postgresql_profiler_frontend/nginx.conf" &>/dev/null; then
        success "nginx.conf —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        warning "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ nginx.conf (—Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)"
    fi
else
    warning "nginx –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
fi

echo ""
echo "==========================================="
echo "üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
echo "==========================================="

if [ $ERRORS -eq 0 ]; then
    success "–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ! –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."
    if [ $WARNINGS -gt 0 ]; then
        warning "–ù–∞–π–¥–µ–Ω–æ $WARNINGS –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –Ω–æ –æ–Ω–∏ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã"
    fi
    echo ""
    info "–î–ª—è —Å–±–æ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  1. cp .env.example .env"
    echo "  2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã"
    echo "  3. docker-compose up --build"
    echo ""
    exit 0
else
    error "–ù–∞–π–¥–µ–Ω–æ $ERRORS –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫!"
    error "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π"
    echo ""
    exit 1
fi

